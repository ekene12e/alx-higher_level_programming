===========================
How to Use 2-matrix_divided.py
===========================

This module defines a matrix division function ``matrix_divided(matrix, div)``.

Usage
=====

``matrix_divided(...)``` returns a new matrix divided by a number

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [[1, 2, 3],[4, 5, 6]]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Raises TypeError if a non number is provided in matrix

    >>> matrix = [[1, 2, 3],[4, 5, 't']]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Raises ZeroDivisionError if the div is 0

    >>> matrix = [[1, 2, 3],[4, 5, 6]]
    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

Raises a TypeError if the length of lists in matrix are unequal

    >>> matrix = [[1, 2, 3],[4, 5]]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

Raises a TypeError if the div is not a number

    >>> matrix = [[1, 2, 3],[4, 5, 6]]
    >>> print(matrix_divided(matrix, 'ar'))
    Traceback (most recent call last):
    TypeError: div must be a number
